#Scan type of the sensor of the device.
class DeviceScanType:
	#2D sensor.
	Areascan = 0

#Controls the behavior of the indicators (such as LEDs) showing the status of the Device.
class DeviceIndicatorMode:
	#Device's indicators are inactive (Off).
	Inactive = 0
	#Device's indicators are active showing their respective status.
	Active = 1
	#Device's indicators are inactive unless an error occurs.
	ErrorStatus = 2

#Selects the location within the device, where the temperature will be measured.
class DeviceTemperatureSelector:
	#Temperature of the image sensor of the camera.
	Sensor = 0
	#Temperature of the device's CPU.
	CPU = 1
	#Temperature of the device's power module.
	Power = 2
	#Temperature of the device's frontend module.
	Frontend = 3
	#Temperature of the device's heatsink.
	Heatsink = 4
	#Temperature of the device's case.
	Case = 5

#Selects the TEC module within the device, where voltage, current and power will be measured.
class DeviceTecSelector:
	#Primary TEC.
	TEC1 = 0

#Selects the mode of operation of the device fan.
class DeviceFanMode:
	#The fan speed in controlled by the camera.
	Automatic = 0
	#The fan speed is controlled by the user
	Manual = 1

#Returns firmware udpate status.
class FirmwareUpdateStatus:
	#No firmware update operation has been requested.
	Idle = 0
	#Firmware update operation in progress.
	InProgress = 1
	#Last firmware update operation succeeded. Reboot the camera to apply new firmware configuration
	Done = 2
	#Last firmware update operation failed.
	Failed = 3

#Returns log collect status.
class LogCollectStatus:
	#No log collect operation has been requested.
	Idle = 0
	#Log collect operation in progress.
	InProgress = 1
	#Log collect succeeded. The logs can now be served.
	Done = 2
	#Log collect failed.
	Failed = 3

#Configures how the camera Ethernet link is configured.
class IPMode:
	#Automatic IP configuration using DHCP.
	Automatic = 0
	#Manual IP configuration.
	Manual = 1

#Specifies the shutter mode of the device.
class SensorShutterMode:
	#The shutter opens and closes at the same time for all pixels. All the pixels are exposed for the same length of time at the same time.
	Global = 0
	#The shutter opens and closes sequentially for groups (typically lines) of pixels. All the pixels are exposed for the same length of time but not at the same time.
	Rolling = 1
	#The shutter opens at the same time for all pixels but ends in a sequential manner. The pixels are exposed for different lengths of time.
	GlobalReset = 2

#Selects the Region of interest to control. The RegionSelector feature allows devices that are able to extract multiple regions out of an image, to configure the features of those individual regions independently.
class RegionSelector:
	#Selected feature will control the region 0.
	Region0 = 0

#Controls if the selected Region of interest is active and streaming.
class RegionMode:
	#Disable the usage of the Region.
	Off = 0
	#Enable the usage of the Region.
	On = 1

#Control the destination of the selected region.
class RegionDestination:
	#The destination of the region is the data stream 0.
	Stream0 = 0

#Selects the sparse area to be configured.
class SparseSelector:
	#Selected feature will control the sparse region 0.
	Region0 = 0
	#Selected feature will control the sparse region 1.
	Region1 = 1
	#Selected feature will control the sparse region 2.
	Region2 = 2
	#Selected feature will control the sparse region 3.
	Region3 = 3
	#Selected feature will control the sparse region 4.
	Region4 = 4
	#Selected feature will control the sparse region 5.
	Region5 = 5
	#Selected feature will control the sparse region 6.
	Region6 = 6
	#Selected feature will control the sparse region 7.
	Region7 = 7

#Controls if the selected spare area is active.
class SparseMode:
	#Disable the usage of the sparse area.
	Off = 0
	#Enable the usage of the sparse area.
	On = 1

#Format of the pixels provided by the device. It represents all the information provided by PixelSize, PixelColorFilter combined in a single feature.
class PixelFormat:
	#Monochrome 8-bit
	Mono8 = 0
	#Monochrome 10-bit unpacked
	Mono10 = 1
	#Monochrome 12-bit unpacked
	Mono12 = 2

#Selects which test pattern generator is controlled by the TestPattern feature.
class TestPatternGeneratorSelector:
	#TestPattern feature will control the sensor's test pattern generator.
	Sensor = 0
	#TestPattern feature will control the FGPA's test pattern generator.
	Simulator = 1

#Selects the type of test pattern that is generated by the device as image source.
class TestPattern:
	#Image is coming from the sensor.
	Off = 0
	#Image is filled with the darkest possible image.
	Black = 1
	#Image is filled with the brightest possible image.
	White = 2
	#Image is filled horizontally with an image that goes from the darkest possible value to the brightest.
	GreyHorizontalRamp = 3
	#Image is filled horizontally with an image that goes from the darkest possible value to the brightest.
	SimulatorGreyHorizontalRamp = 4
	#Image is filled horizontally with an image that goes from the darkest possible value to the brightest and that moves horizontally from left to right at each frame.
	SimulatorGreyHorizontalRampMoving = 5

#Sets the acquisition mode of the device. It defines mainly the number of frames to capture during an acquisition and the way the acquisition stops.
class AcquisitionMode:
	#Frames are captured continuously until stopped with the AcquisitionStop command.
	Continuous = 0

#Sets the operation mode of the Exposure.
class ExposureMode:
	#Timed exposure. The exposure duration time is set using the ExposureTime or ExposureAuto features and the exposure starts with the FrameStart or LineStart.
	Timed = 0

#Controls the glow reduction scheme in use.
class GlowReduction:
	#No glow reduction is applied.
	Off = 0
	#Glow reduction is applied.
	On = 1

#Selects which Gain is controlled by the various Gain features.
class GainSelector:
	#Gain will be applied to all analog channels or taps.
	AnalogAll = 0
	#Gain will be applied to all digital channels or taps.
	DigitalAll = 1

#Selects which Black Level is controlled by the various Black Level features.
class BlackLevelSelector:
	#Black Level will be applied to all channels or taps.
	All = 0

#Controls the mode for automatic black level adjustment. The exact algorithm used to implement this adjustment is device-specific.
class BlackLevelAuto:
	#Analog black level is user controlled using BlackLevel.
	Off = 0
	#Analog black level is constantly adjusted by the device.
	Continuous = 1

#Controls the conversion efficiency.
class ConversionEfficiency:
	#The selected conversion efficiency is low.
	Low = 0
	#The selected conversion efficiency is high.
	High = 1

#Selects the feature User Set to load, save or configure.
class UserSetSelector:
	#Selects the 8 bits low sensitivity factory setting user set.
	Default8bits = 0
	#Selects the 12 bits low sensitivity factory setting user set.
	Default12bits = 1
	#Selects the 8 bits high sensitivity factory setting user set.
	HighSensitivity8bits = 2
	#Selects the 12 bits high sensitivity factory setting user set.
	HighSensitivity12bits = 3
	#Selects the user set 0.
	UserSet0 = 4
	#Selects the user set 1.
	UserSet1 = 5
	#Selects the user set 2.
	UserSet2 = 6
	#Selects the user set 3.
	UserSet3 = 7
	#Selects the user set 4.
	UserSet4 = 8
	#Selects the user set 5.
	UserSet5 = 9
	#Selects the user set 6.
	UserSet6 = 10
	#Selects the user set 7.
	UserSet7 = 11
	#Selects the user set 8.
	UserSet8 = 12
	#Selects the user set 9.
	UserSet9 = 13

#Selects the feature User Set to load and make active by default when the device is reset.
class UserSetDefault:
	#Selects the 8 bits low sensitivity factory setting user set.
	Default8bits = 0
	#Selects the 12 bits low sensitivity factory setting user set.
	Default12bits = 1
	#Selects the 8 bits high sensitivity factory setting user set.
	HighSensitivity8bits = 2
	#Selects the 12 bits high sensitivity factory setting user set.
	HighSensitivity12bits = 3
	#Selects the user set 0.
	UserSet0 = 4
	#Selects the user set 1.
	UserSet1 = 5
	#Selects the user set 2.
	UserSet2 = 6
	#Selects the user set 3.
	UserSet3 = 7
	#Selects the user set 4.
	UserSet4 = 8
	#Selects the user set 5.
	UserSet5 = 9
	#Selects the user set 6.
	UserSet6 = 10
	#Selects the user set 7.
	UserSet7 = 11
	#Selects the user set 8.
	UserSet8 = 12
	#Selects the user set 9.
	UserSet9 = 13

#This feature indicates the current and active Link configuration used by the Device.
class CxpLinkConfigurationStatus:
	#1 Connection operating at CXP-1 speed (1.25 Gbps).
	CXP1_X1 = 0
	#1 Connection operating at CXP-12 speed (12.50 Gbps).
	CXP12_X1 = 1
	#2 Connections operating at CXP-1 speed (1.25 Gbps).
	CXP1_X2 = 2
	#2 Connections operating at CXP-6 speed (6.25 Gbps).
	CXP6_X2 = 3
	#2 Connections operating at CXP-10 speed (10.00 Gbps).
	CXP10_X2 = 4
	#2 Connections operating at CXP-12 speed (12.50 Gbps).
	CXP12_X2 = 5

#Provides the Link configuration that allows the Transmitter Device to operate in its default mode.
class CxpLinkConfigurationPreferred:
	#1 Connection operating at CXP-12 speed (12.50 Gbps).
	CXP12_X1 = 0
	#2 Connections operating at CXP-6 speed (6.25 Gbps).
	CXP6_X2 = 1
	#2 Connections operating at CXP-10 speed (10.00 Gbps).
	CXP10_X2 = 2
	#2 Connections operating at CXP-12 speed (12.50 Gbps).
	CXP12_X2 = 3

#This feature allows specifying the Link configuration for the communication between the Receiver and Transmitter Device. In most cases this feature does not need to be written because automatic discovery will set configuration correctly to the value returned by CxpLinkConfigurationPreferred. Note that the currently active configuration of the Link can be read using CxpLinkConfigurationStatus.
class CxpLinkConfiguration:
	#Force the Link to 2 Connections operating at CXP-10 speed (10.00 Gbps).
	CXP10_X2 = 0

#Enables the test mode for an individual physical connection of the Device.
class CxpConnectionTestMode:
	#Off
	Off = 0
	#Mode 1
	Mode1 = 1

#Selects which one of the send or receive features to control.
class CxpSendReceiveSelector:
	#Send
	Send = 0
	#Receive
	Receive = 1

#Selects which Cxp Error Counter to read or reset.
class CxpErrorCounterSelector:
	#Counts the number of times the lock was lost.
	ConnectionLockLoss = 0
	#Counts the number of protocol encoding errors detected.
	Encoding = 1
	#Counts the number of CRC errors detected in a data packet. This counter is only available on the CoaXpress host.
	StreamDataPacketCrc = 2
	#Counts the number of CRC errors detected in a control packet.
	ControlPacketCrc = 3
	#Counts the number of CRC errors detected in an event packet.
	EventPacketCrc = 4
	#Counts the number of corrected errors in the duplicated characters in CXP control words.
	DuplicatedCharactersCorrected = 5
	#Counts the number of uncorrected errors in the duplicated characters in CXP control words.
	DuplicatedCharactersUncorrected = 6

#Returns the current status of the selected Cxp Error Counter on the connection selected by CxpConnectionSelector.
class CxpErrorCounterStatus:
	#The counter is actively counting errors.
	CounterActive = 0
	#The counter exceeded its maximum error count.
	CounterOverflow = 1

